// <auto-generated />
using System;
using IFNMUSiteCore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IFNMUSiteCore.Migrations
{
    [DbContext(typeof(LessonContext))]
    [Migration("20190813133753_migrations")]
    partial class migrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099");

            modelBuilder.Entity("IFNMUSiteCore.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("QuestionId");

                    b.Property<string>("Text");

                    b.Property<bool>("TrueAnswer");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("IFNMUSiteCore.Models.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte>("LessonNumber");

                    b.Property<string>("Name");

                    b.Property<int>("ScheduleDayId");

                    b.Property<int?>("ThematicPlanId");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleDayId");

                    b.HasIndex("ThematicPlanId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("IFNMUSiteCore.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("QuestionText");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("IFNMUSiteCore.Models.ScheduleDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte>("Courses");

                    b.Property<byte>("DayNumber");

                    b.Property<string>("Group");

                    b.Property<int>("LessonCount");

                    b.Property<byte>("Week");

                    b.HasKey("Id");

                    b.ToTable("ScheduleDays");
                });

            modelBuilder.Entity("IFNMUSiteCore.Models.ThematicPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Courses");

                    b.Property<string>("NameChair");

                    b.Property<string>("NameLesson");

                    b.Property<string>("NameSpecialty");

                    b.HasKey("Id");

                    b.ToTable("ThematicPlans");

                    b.HasData(
                        new { Id = -1, Courses = "None", NameChair = "None", NameLesson = "None", NameSpecialty = "None" }
                    );
                });

            modelBuilder.Entity("IFNMUSiteCore.Models.Theme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Date");

                    b.Property<string>("Name");

                    b.Property<byte>("NumberHour");

                    b.Property<int>("ThematicPlanId");

                    b.HasKey("Id");

                    b.HasIndex("ThematicPlanId");

                    b.ToTable("Themes");
                });

            modelBuilder.Entity("IFNMUSiteCore.Models.Answer", b =>
                {
                    b.HasOne("IFNMUSiteCore.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IFNMUSiteCore.Models.Lesson", b =>
                {
                    b.HasOne("IFNMUSiteCore.Models.ScheduleDay", "ScheduleDay")
                        .WithMany("Lessons")
                        .HasForeignKey("ScheduleDayId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IFNMUSiteCore.Models.ThematicPlan", "ThematicPlan")
                        .WithMany("Lessons")
                        .HasForeignKey("ThematicPlanId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("IFNMUSiteCore.Models.Theme", b =>
                {
                    b.HasOne("IFNMUSiteCore.Models.ThematicPlan", "ThematicPlan")
                        .WithMany("Themes")
                        .HasForeignKey("ThematicPlanId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
